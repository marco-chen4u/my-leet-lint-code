/***
* LeetCode 1390. Four Divisors
Given an integer array nums, return the sum of divisors of the integers in that array that have exactly four divisors.
If there is no such integer in the array, return 0.

Example 1
    Input: nums = [21,4,7]
    Output: 32
    Explanation: 
        21 has 4 divisors: 1, 3, 7, 21
        4 has 3 divisors: 1, 2, 4
        7 has 2 divisors: 1, 7
        The answer is the sum of divisors of 21 only.
        
Example 2
    Input: nums = [21,21]
    Output: 64

Example 3
    Input: nums = [1,2,3,4,5]
    Output: 0
    
Constraints:
    1 <= nums.length <= 104
    1 <= nums[i] <= 105

        
LeetCode link: https://leetcode.com/problems/four-divisors/
***/
//version-1: math + iteration
class Solution {
    public int sumFourDivisors(int[] nums) {
        if (nums == null || nums.length == 0) {
            return 0;
        }

        int sum = 0;
        for (int num : nums) {
            List<Integer> values = getFourDivisors(num);
            if (values.isEmpty()) {
                continue;
            }

            //System.out.println("num =" + num + ", values = " + values);

            sum += getSum(values);
        }

        return sum;
    }

    // helper method    
    private int getSum(List<Integer> values) {
        int sum = 0;
        for (int value : values) {
            sum += value;
        }

        return sum;
    }

    private List<Integer> getFourDivisors(int num) {
        //System.out.println("processing num = " + num);
        List<Integer> result = new LinkedList<>();

        int count = 0;
        result.add(1);
        result.add(num);
        count += 2;
        for (int i = 2; i <= Math.sqrt(num); i++) {
            if (num % i != 0) {
                continue;
            }

            if (i * i == num) {
                result.add(i);
                count += 1;
                continue;
            }

            result.add(i);
            result.add(num / i);
            count += 2;

            if (count > 4) {
                break;
            }
        }

        //System.out.println("count = " + count + ", result = " + result);
        if (count != 4) {
            result = Collections.EMPTY_LIST;
        }

        return result;
    }
}
